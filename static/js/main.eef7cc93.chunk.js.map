{"version":3,"sources":["data/notes-api.ts","store/data-reducer.ts","components/AddItemForm/AddItemForm.tsx","components/NoteEditor/NoteEditor.tsx","components/ViewNote/ViewNote.tsx","components/Tags/Tag/Tag.tsx","components/Tags/Tags.tsx","components/Notes/Note/Note.tsx","components/Notes/Notes.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx","components/AddItemForm/AddItemForm.module.scss","components/NoteEditor/NoteEditor.module.scss","components/ViewNote/ViewNote.module.scss","components/Tags/Tag/Tag.module.scss","App.module.scss","components/Tags/Tags.module.scss","components/Notes/Notes.module.scss","components/Notes/Note/Note.module.scss"],"names":["data","require","notesApi","Promise","resolve","title","newNote","id","uuidv1","body","noteId","resultCode","tag","initialState","AddItemForm","React","memo","addItem","name","useState","setTitle","error","setError","onAddItemClick","trim","split","inputClassName","styles","input","errorInput","className","addItemForm","value","onChange","event","currentTarget","type","placeholder","onKeyPress","e","key","onClick","NoteEditor","selectedNote","updateNoteText","returnWithoutChanges","tags","noteText","setNoteText","onNoteTextChange","useCallback","onCancelClickHandler","onSubmitClickHandler","tagsSearch","length","reduce","acc","regex","RegExp","noteEditor","textarea","highlight","buttons","ViewNote","setViewMode","viewNote","noteTitle","closeButton","Tag","onTagClick","onDeleteTagClickHandler","tagBlock","toLowerCase","Tags","onResetClickHandler","map","Note","onNoteClickHandler","onEditClickHandler","onDeleteNoteClickHandler","note","Notes","filteredNotes","notes","App","dispatch","useDispatch","useSelector","state","viewMode","selectedNoteId","setSelectedNoteId","selectedTag","setSelectedTag","useEffect","then","response","addNote","addNoteTC","addTag","every","addTagTC","removeNoteAC","removeNoteTC","removeTagAC","removeTagTC","found","match","forEach","noteTextWithoutHash","replace","updateNoteAC","filter","test","app","notesAndTags","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.eef7cc93.chunk.js","sourcesContent":["import { v1 as uuidv1 } from 'uuid';\r\n\r\nconst data: DataType = require('./data.json');\r\n\r\nexport type NoteType = {\r\n  id: string\r\n  title: string\r\n  body: string\r\n}\r\n\r\nexport type DataType = {\r\n  notes: NoteType[]\r\n  tags: string[]\r\n}\r\n\r\nexport const notesApi = {\r\n  getData(): Promise<DataType> {\r\n    return new Promise((resolve) => resolve(data));\r\n  },\r\n  addNote(title: string): Promise<NoteType> {\r\n    const newNote = { id: uuidv1(), title, body: '' };\r\n    return new Promise(resolve => resolve(newNote));\r\n  },\r\n  removeNote(noteId: string): Promise<{ resultCode: number }> {\r\n    return new Promise(resolve => resolve({ resultCode: 0 }));\r\n  },\r\n  addTag(title: string): Promise<string> {\r\n    return new Promise(resolve => resolve(title));\r\n  },\r\n  removeTag(tag: string): Promise<{ resultCode: number }> {\r\n    return new Promise(resolve => resolve({ resultCode: 0 }));\r\n  },\r\n  updateNote(noteId: string, body: string): Promise<string> {\r\n    return new Promise(resolve => resolve(body));\r\n  }\r\n};","import { Dispatch } from 'redux';\r\n\r\nimport { DataType, notesApi, NoteType } from '../data/notes-api';\r\n\r\ntype ActionsType =\r\n  SetDataActionType\r\n  | AddNoteActionType\r\n  | RemoveNoteActionType\r\n  | AddTagActionType\r\n  | RemoveTagActionType\r\n  | UpdateNoteActionType\r\n\r\ntype SetDataActionType = {\r\n  type: 'SET-DATA'\r\n  data: DataType\r\n}\r\ntype AddNoteActionType = {\r\n  type: 'ADD-NOTE'\r\n  note: NoteType\r\n}\r\ntype RemoveNoteActionType = {\r\n  type: 'REMOVE-NOTE'\r\n  noteId: string\r\n}\r\ntype AddTagActionType = {\r\n  type: 'ADD-TAG'\r\n  tag: string\r\n}\r\ntype RemoveTagActionType = {\r\n  type: 'REMOVE-TAG'\r\n  tag: string\r\n}\r\ntype UpdateNoteActionType = {\r\n  type: 'UPDATE-NOTE'\r\n  noteId: string\r\n  body: string\r\n}\r\n\r\nconst initialState = {} as DataType;\r\n\r\nexport const dataReducer = (state: DataType = initialState, action: ActionsType): DataType => {\r\n  switch (action.type) {\r\n    case 'SET-DATA':\r\n      return { ...state, notes: action.data.notes, tags: action.data.tags };\r\n    case 'ADD-NOTE':\r\n      return { ...state, notes: [...state.notes, action.note] };\r\n    case 'REMOVE-NOTE':\r\n      return { ...state, notes: state.notes.filter(note => note.id !== action.noteId) };\r\n    case 'ADD-TAG':\r\n      return { ...state, tags: [...state.tags, action.tag] };\r\n    case 'REMOVE-TAG':\r\n      return { ...state, tags: state.tags.filter(tag => tag !== action.tag) };\r\n    case 'UPDATE-NOTE':\r\n      return {\r\n        ...state, notes: state.notes.map(note => note.id === action.noteId ? {\r\n          ...note, body: action.body\r\n        } : note)\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nconst setDataAC = (data: DataType): SetDataActionType => {\r\n  return { type: 'SET-DATA', data } as const;\r\n};\r\nconst addNoteAC = (note: NoteType): AddNoteActionType => {\r\n  return { type: 'ADD-NOTE', note } as const;\r\n};\r\nconst removeNoteAC = (noteId: string): RemoveNoteActionType => {\r\n  return { type: 'REMOVE-NOTE', noteId } as const;\r\n};\r\nconst addTagAC = (tag: string): AddTagActionType => {\r\n  return { type: 'ADD-TAG', tag } as const;\r\n};\r\nconst removeTagAC = (tag: string): RemoveTagActionType => {\r\n  return { type: 'REMOVE-TAG', tag } as const;\r\n};\r\nconst updateNoteAC = (noteId: string, body: string): UpdateNoteActionType => {\r\n  return { type: 'UPDATE-NOTE', noteId, body } as const;\r\n};\r\n\r\nexport const fetchDataTC = () => (dispatch: Dispatch) => {\r\n  notesApi.getData()\r\n    .then(response => {\r\n      dispatch(setDataAC(response));\r\n    });\r\n};\r\n\r\nexport const addNoteTC = (title: string) => (dispatch: Dispatch) => {\r\n  notesApi.addNote(title)\r\n    .then(response => {\r\n      dispatch(addNoteAC(response));\r\n    });\r\n};\r\n\r\nexport const removeNoteTC = (noteId: string) => (dispatch: Dispatch) => {\r\n  notesApi.removeNote(noteId)\r\n    .then(response => {\r\n      !response.resultCode && dispatch(removeNoteAC(noteId));\r\n    });\r\n};\r\n\r\nexport const addTagTC = (title: string) => (dispatch: Dispatch) => {\r\n  notesApi.addTag(title)\r\n    .then(response => {\r\n      dispatch(addTagAC(response));\r\n    });\r\n};\r\n\r\nexport const removeTagTC = (tag: string) => (dispatch: Dispatch) => {\r\n  notesApi.removeTag(tag)\r\n    .then(response => {\r\n      !response.resultCode && dispatch(removeTagAC(tag));\r\n    });\r\n};\r\n\r\nexport const updateNoteTC = (noteId: string, body: string) => (dispatch: Dispatch) => {\r\n  notesApi.updateNote(noteId, body)\r\n    .then(response => {\r\n      dispatch(updateNoteAC(noteId, response));\r\n    });\r\n};\r\n","import React, { ChangeEvent, KeyboardEvent, useState } from 'react';\r\n\r\nimport styles from './AddItemForm.module.scss'\r\n\r\ntype AddItemFormPropsType = {\r\n  addItem: (title: string) => void\r\n  name: string\r\n}\r\n\r\nexport const AddItemForm: React.FC<AddItemFormPropsType> = React.memo(({ addItem, name }) => {\r\n  const [title, setTitle] = useState<string>('');\r\n  const [error, setError] = useState<string>('')\r\n\r\n  const inputHandle = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setTitle(event.currentTarget.value);\r\n  };\r\n\r\n  const onAddItemClick = (): void => {\r\n    if (title.trim() === '') {\r\n      setError(`${name.split(' ')[1]} is required!`);\r\n    } else {\r\n      addItem(title);\r\n      setTitle('');\r\n    }\r\n  };\r\n\r\n  const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>): void => {\r\n    error !== '' && setError('');\r\n    e.key === 'Enter' && onAddItemClick();\r\n  };\r\n\r\n  const inputClassName: string = `${styles.input} ${error ? styles.errorInput : ''}`\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.addItemForm}>\r\n        <input\r\n          className={inputClassName}\r\n          value={title}\r\n          onChange={inputHandle}\r\n          type=\"text\"\r\n          placeholder={`enter ${name}`}\r\n          onKeyPress={onKeyPressHandler}\r\n        />\r\n        <button onClick={onAddItemClick}>{`Add ${name.split(' ')[0]}`}</button>\r\n      </div>\r\n      <div className={styles.error}>\r\n        {error}\r\n      </div>\r\n    </div>\r\n  );\r\n});","import React, { useCallback, useState } from 'react';\r\n\r\nimport styles from './NoteEditor.module.scss';\r\nimport { NoteType } from '../../data/notes-api';\r\n//@ts-ignore\r\nimport { HighlightWithinTextarea } from 'react-highlight-within-textarea';\r\n\r\ntype NoteEditorPropsType = {\r\n  selectedNote: NoteType\r\n  updateNoteText: (noteText: string) => void\r\n  returnWithoutChanges: () => void\r\n  tags: string[]\r\n}\r\n\r\nexport const NoteEditor: React.FC<NoteEditorPropsType> = React.memo(({\r\n                                                                       selectedNote,\r\n                                                                       updateNoteText,\r\n                                                                       returnWithoutChanges,\r\n                                                                       tags\r\n                                                                     }) => {\r\n  const [noteText, setNoteText] = useState<string>(selectedNote.body);\r\n\r\n  const onNoteTextChange = useCallback((event: string): void => {\r\n    setNoteText(event);\r\n  }, []);\r\n\r\n  const onCancelClickHandler = useCallback((): void => {\r\n    returnWithoutChanges();\r\n  }, [returnWithoutChanges]);\r\n\r\n  const onSubmitClickHandler = useCallback((): void => {\r\n    if (noteText !== selectedNote.body) updateNoteText(noteText);\r\n    else onCancelClickHandler();\r\n  }, [noteText, onCancelClickHandler, updateNoteText, selectedNote.body]);\r\n\r\n  const tagsSearch: string | null = tags.length ? tags.reduce((tag, acc) => acc + `|${tag}`) : null;\r\n  const regex: RegExp = new RegExp(`\\\\b(${tagsSearch})\\\\b`, 'gi');\r\n\r\n  return (\r\n    <div className={styles.noteEditor}>\r\n      <div className={styles.title}>{selectedNote.title}</div>\r\n      <div className={styles.textarea}>\r\n        <HighlightWithinTextarea\r\n          value={noteText}\r\n          highlight={tagsSearch ? regex : null}\r\n          onChange={onNoteTextChange}\r\n        />\r\n      </div>\r\n      <div className={styles.buttons}>\r\n        <button onClick={onSubmitClickHandler}>Save</button>\r\n        <button onClick={onCancelClickHandler}>Cancel</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});","import React from 'react';\r\n\r\nimport { NoteType } from '../../data/notes-api';\r\nimport { ViewModeType } from '../../App';\r\nimport styles from './ViewNote.module.scss'\r\n\r\ntype ViewNotePropsType = {\r\n  selectedNote: NoteType\r\n  setViewMode: (value: ViewModeType) => void\r\n}\r\n\r\nexport const ViewNote: React.FC<ViewNotePropsType> = React.memo(({ selectedNote, setViewMode }) => {\r\n\r\n  return (\r\n    <div className={styles.viewNote}>\r\n      <div className={styles.noteTitle}>{selectedNote.title}</div>\r\n      <div>{selectedNote.body}</div>\r\n      <div className={styles.closeButton}>\r\n        <button onClick={() => setViewMode('none')}>Close</button>\r\n      </div>\r\n    </div>\r\n  );\r\n});","import React from 'react';\r\n\r\nimport styles from './Tag.module.scss';\r\n\r\ntype TagPropsType = {\r\n  tag: string\r\n  onTagClick: (tag: string) => void\r\n  onDeleteTagClickHandler: (tag: string) => void\r\n}\r\n\r\nexport const Tag: React.FC<TagPropsType> = React.memo(({ tag, onTagClick, onDeleteTagClickHandler }) => {\r\n\r\n  return (\r\n    <div className={styles.tagBlock}>\r\n      <span className={styles.tag} onClick={() => onTagClick(tag)}>#{tag.toLowerCase()}</span>\r\n      <button onClick={() => onDeleteTagClickHandler(tag)}>x</button>\r\n    </div>\r\n  );\r\n});","import React from 'react';\r\n\r\nimport styles from './Tags.module.scss';\r\n\r\nimport { Tag } from './Tag/Tag';\r\n\r\ntype TagsPropsType = {\r\n  tags: string[]\r\n  onTagClick: (tag: string) => void\r\n  onDeleteTagClickHandler: (tag: string) => void\r\n  onResetClickHandler: () => void\r\n}\r\nexport const Tags: React.FC<TagsPropsType> = ({ tags, onTagClick, onDeleteTagClickHandler, onResetClickHandler }) => {\r\n\r\n  return (\r\n    <div className={styles.tags}>\r\n      <div>\r\n        {tags.length\r\n          ? tags.map(tag =>\r\n            <Tag\r\n              key={tag}\r\n              tag={tag}\r\n              onTagClick={onTagClick}\r\n              onDeleteTagClickHandler={onDeleteTagClickHandler}\r\n            />)\r\n          : <div>No saved tags</div>\r\n        }\r\n      </div>\r\n      <div>\r\n        <button onClick={onResetClickHandler}>Reset filter</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\n\r\nimport styles from './Note.module.scss';\r\n\r\ntype NotePropsType = {\r\n  noteId: string\r\n  noteTitle: string\r\n  onNoteClickHandler: (noteId: string) => void\r\n  onEditClickHandler: (noteId: string) => void\r\n  onDeleteNoteClickHandler: (noteId: string) => void\r\n}\r\nexport const Note: React.FC<NotePropsType> = React.memo(({\r\n                                                           noteId,\r\n                                                           noteTitle,\r\n                                                           onNoteClickHandler,\r\n                                                           onEditClickHandler,\r\n                                                           onDeleteNoteClickHandler\r\n                                                         }) => {\r\n\r\n  return (\r\n    <div>\r\n      <span className={styles.note} onClick={() => onNoteClickHandler(noteId)}>{noteTitle}</span>\r\n      <button onClick={() => onNoteClickHandler(noteId)}>View</button>\r\n      <button onClick={() => onEditClickHandler(noteId)}>Edit</button>\r\n      <button onClick={() => onDeleteNoteClickHandler(noteId)}>Delete</button>\r\n    </div>\r\n  );\r\n});","import React from 'react';\r\n\r\nimport { NoteType } from '../../data/notes-api';\r\nimport styles from './Notes.module.scss';\r\nimport { Note } from './Note/Note';\r\n\r\ntype NotesPropsType = {\r\n  filteredNotes: NoteType[]\r\n  onNoteClickHandler: (noteId: string) => void\r\n  onEditClickHandler: (noteId: string) => void\r\n  onDeleteNoteClickHandler: (noteId: string) => void\r\n}\r\n\r\nexport const Notes: React.FC<NotesPropsType> = ({\r\n                                                  filteredNotes,\r\n                                                  onNoteClickHandler,\r\n                                                  onEditClickHandler,\r\n                                                  onDeleteNoteClickHandler\r\n                                                }) => {\r\n\r\n  return (\r\n    <div className={styles.notes}>\r\n      {filteredNotes.length\r\n        ? filteredNotes.map(note =>\r\n          <Note\r\n            key={note.id}\r\n            noteId={note.id}\r\n            noteTitle={note.title}\r\n            onNoteClickHandler={onNoteClickHandler}\r\n            onEditClickHandler={onEditClickHandler}\r\n            onDeleteNoteClickHandler={onDeleteNoteClickHandler}\r\n          />)\r\n        : <div>No notes found</div>}\r\n    </div>\r\n  );\r\n};","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { StateType } from './store/store';\nimport { DataType, NoteType } from './data/notes-api';\nimport {\n  addNoteTC,\n  addTagTC,\n  fetchDataTC,\n  removeNoteTC,\n  removeTagTC,\n  updateNoteTC\n} from './store/data-reducer';\nimport { AddItemForm } from './components/AddItemForm/AddItemForm';\nimport { NoteEditor } from './components/NoteEditor/NoteEditor';\nimport { ViewNote } from './components/ViewNote/ViewNote';\nimport { Tags } from './components/Tags/Tags';\nimport styles from './App.module.scss';\nimport { Notes } from './components/Notes/Notes';\n\nexport type ViewModeType = 'none' | 'read' | 'edit';\n\nexport function App() {\n  const dispatch = useDispatch();\n  const data = useSelector<StateType, DataType>(state => state.data);\n  const [viewMode, setViewMode] = useState<ViewModeType>('none');\n  const [selectedNoteId, setSelectedNoteId] = useState<string>('');\n  const [selectedTag, setSelectedTag] = useState<string>('');\n\n  useEffect(() => {\n    dispatch(fetchDataTC());\n  }, [dispatch]);\n\n  const onNoteClickHandler = useCallback((noteId: string): void => {\n    setSelectedNoteId(noteId);\n    setViewMode('read');\n  }, []);\n\n  const onEditClickHandler = useCallback((noteId: string): void => {\n    setSelectedNoteId(noteId);\n    setViewMode('edit');\n  }, []);\n\n  const addNote = useCallback((title: string): void => {\n    dispatch(addNoteTC(title));\n  }, [dispatch]);\n\n  const addTag = useCallback((title: string): void => {\n    const isTagUnique: boolean = data.tags.every(tag => tag !== title.toLowerCase());\n    isTagUnique && dispatch(addTagTC(title));\n  }, [dispatch, data.tags]);\n\n  const onDeleteNoteClickHandler = useCallback((noteId: string): void => {\n    dispatch(removeNoteTC(noteId));\n  }, [dispatch]);\n\n  const onDeleteTagClickHandler = useCallback((tag: string): void => {\n    dispatch(removeTagTC(tag));\n  }, [dispatch]);\n\n  const updateNoteText = useCallback((noteText: string): void => {\n    const regex1: RegExp = /(?<=#)\\b\\w*\\b/gi;\n    const found: RegExpMatchArray | null = noteText.match(regex1);\n    found && found.forEach(tag => addTag(tag));\n    const regex2: RegExp = /#(?=\\w)/gi;\n    const noteTextWithoutHash: string = noteText.replace(regex2, '');\n    dispatch(updateNoteTC(selectedNoteId, noteTextWithoutHash));\n    setViewMode('none');\n  }, [dispatch, addTag, selectedNoteId]);\n\n  const returnWithoutChanges = useCallback((): void => {\n    setViewMode('none');\n  }, []);\n\n  const onTagClick = useCallback((tag: string): void => {\n    setSelectedTag(tag);\n  }, []);\n\n  const onResetClickHandler = useCallback((): void => {\n    setSelectedTag('');\n  }, []);\n\n  if (!data.notes && !data.tags) {\n    return (\n      <div>Loading</div>\n    );\n  }\n\n  const selectedNote: NoteType = data.notes.filter(note => note.id === selectedNoteId)[0];\n  const filteredNotes: NoteType[] = data.notes.filter(note => {\n    if (selectedTag === '') return true;\n    const regex: RegExp = new RegExp(`\\\\b${selectedTag}\\\\b`, 'i');\n    return regex.test(note.body);\n  });\n\n  return (\n    <div className={styles.app}>\n      {viewMode !== 'edit'\n        ? <div className={styles.notesAndTags}>\n          <AddItemForm addItem={addNote} name={'note title'}/>\n          <Notes\n            filteredNotes={filteredNotes}\n            onNoteClickHandler={onNoteClickHandler}\n            onEditClickHandler={onEditClickHandler}\n            onDeleteNoteClickHandler={onDeleteNoteClickHandler}\n          />\n          <AddItemForm addItem={addTag} name={'tag name'}/>\n          <Tags\n            tags={data.tags}\n            onTagClick={onTagClick}\n            onDeleteTagClickHandler={onDeleteTagClickHandler}\n            onResetClickHandler={onResetClickHandler}\n          />\n          {viewMode === 'read' &&\n          <ViewNote selectedNote={selectedNote} setViewMode={setViewMode}/>}\n        </div>\n        : <NoteEditor\n          selectedNote={selectedNote}\n          updateNoteText={updateNoteText}\n          returnWithoutChanges={returnWithoutChanges}\n          tags={data.tags}\n        />}\n    </div>\n  );\n}\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { dataReducer } from './data-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  data: dataReducer\r\n});\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addItemForm\":\"AddItemForm_addItemForm__1f81Z\",\"input\":\"AddItemForm_input__3sw-N\",\"errorInput\":\"AddItemForm_errorInput__1c0Ga\",\"error\":\"AddItemForm_error__2YPx7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteEditor\":\"NoteEditor_noteEditor__2rgrL\",\"title\":\"NoteEditor_title__9vIe-\",\"buttons\":\"NoteEditor_buttons__ptcy6\",\"textarea\":\"NoteEditor_textarea__264Gq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewNote\":\"ViewNote_viewNote__PurCZ\",\"noteTitle\":\"ViewNote_noteTitle__3T3JU\",\"closeButton\":\"ViewNote_closeButton__3F5Iv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag\":\"Tag_tag__xdOyX\",\"tagBlock\":\"Tag_tagBlock__185Ic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__34RHZ\",\"notesAndTags\":\"App_notesAndTags__3wNM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__1ycSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"Notes_notes__1N9T2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__1K4dm\"};"],"sourceRoot":""}